<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Unity.Configuration"/>
  </configSections>
  <unity>
    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Unity.Interception.Configuration"/>
    <containers>
      <container name="eonpuMvc5Container">
        <extension type="Interception"/>
        <!--<register type="System.Data.Entity.DbContext,EntityFramework" mapTo="Eonup.EF.Model.ZhanProDbContext,Eonup.EF.Model"/>-->
        <!--<register type="System.Data.Entity.DbContext,EntityFramework" mapTo="Eonup.EF.Model.NorthwindContext,Eonup.EF.Model"/>-->
        <register type="System.Data.Entity.DbContext,EntityFramework" mapTo="Eonup.EF.Model.AdvanceContext,Eonup.EF.Model"/>
        <register type="Eonup.Business.Interface.IBaseService, Eonup.Business.Interface" mapTo="Eonup.Business.Service.BaseService,Eonup.Business.Service"/>
        <register type="Eonup.Business.Interface.ICommodityService, Eonup.Business.Interface" mapTo="Eonup.Business.Service.CommodityService,Eonup.Business.Service"/>
        <register type="Eonup.Business.Interface.IUserService,Eonup.Business.Interface" mapTo="Eonup.Business.Service.UserService,Eonup.Business.Service"/>
        <register type="Eonup.Business.Interface.IProductService, Eonup.Business.Interface" mapTo="Eonup.Business.Service.ProductService,Eonup.Business.Service"/>
        <register type="Eonup.Remote.Interface.ISearchService, Eonup.Remote.Interface" mapTo="Eonup.Remote.Service.SearchService,Eonup.Remote.Service">
          <interceptor type="InterfaceInterceptor"/>
          <interceptionBehavior type="Eonup.Framework.AOP.LogBeforeBehavior,Eonup.Framework"/>
          <interceptionBehavior type="Eonup.Framework.AOP.LogAfterBehavior,Eonup.Framework"/>
        </register>
      </container>
    </containers>
  </unity>
</configuration>